user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    upstream django {
        server web:8000;
    }

    server {
        listen 80;
        server_name _;

        # API version fallback routing: location for versioned API
        location ~ ^/api/v(?P<ver>\d+)(/|$) {
            # default: no fallback
            set $api_version_target "";

            # Example range: 10-20 -> target 10. Add more conditions as needed.
            if ($ver ~ "^(1[0-9]|20)$") {
                set $api_version_target 10;
            }

            # If a fallback target is set, rewrite to target version
            if ($api_version_target != "") {
                rewrite ^/api/v\d+(.*)$ /api/v$api_version_target$1 break;
            }

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass http://django$uri$is_args$args;
        }

        # Fallback: proxy everything else directly to Django
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://django$uri$is_args$args;
        }
    }
}
