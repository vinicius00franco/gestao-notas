services:
  db:
    image: postgres:14-alpine
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./db-init:/docker-entrypoint-initdb.d:ro
    env_file:
      - ../.env.db
      - ../.env.common
    ports:
      - "${HOST_DB_PORT:-15432}:5432"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: rabbitmq
    ports:
      - "${HOST_RABBITMQ_PORT:-5673}:5672"
      - "${HOST_RABBITMQ_MANAGEMENT_PORT:-15673}:15672"
    env_file:
      - ../.env.rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  web:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    container_name: django_api
    command: gunicorn backend.asgi:application -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
    volumes:
      - ../backend:/app/backend
      - ../apps:/app/apps
      - ../manage.py:/app/manage.py
      - ../media:/app/media
      - ../infra/entrypoint_no_migrate.sh:/entrypoint.sh
    ports:
      - "8000:8000"
    env_file:
      - ../.env.common
      - ../.env.web
    depends_on:
      - db
      - rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  worker:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    container_name: celery_worker
    command: celery -A backend worker -l info
    volumes:
      - ../backend:/app/backend
      - ../apps:/app/apps
      - ../manage.py:/app/manage.py
      - ../media:/app/media
      - ../infra/entrypoint_no_migrate.sh:/entrypoint.sh
    env_file:
      - ../.env.common
      - ../.env.web
    depends_on:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:1.25-alpine
    container_name: nginx_gateway
    ports:
      - "${HOST_NGINX_PORT:-8080}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/_grafana
      - ./monitoring/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/gestao-notas-overview.json
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
  prometheus_data:
  grafana_data: