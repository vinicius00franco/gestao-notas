services:
  db:
    image: postgres:14-alpine
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./db-init:/docker-entrypoint-initdb.d:ro
    env_file:
      - ../.env.db
    ports:
      - "${HOST_DB_PORT:-15432}:5432"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: rabbitmq
    ports:
      - "${HOST_RABBITMQ_PORT:-5673}:5672"
      - "${HOST_RABBITMQ_MANAGEMENT_PORT:-15673}:15672"
    env_file:
      - ../.env.rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  web:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    container_name: django_api
    command: sh -c "python manage.py migrate --noinput && gunicorn backend.asgi:application -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000"
    volumes:
      - ..:/app
    env_file:
      - ../.env.common
      - ../.env.web
    depends_on:
      - db
      - rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  worker:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    container_name: celery_worker
    command: celery -A backend worker -l info
    volumes:
      - ..:/app
    env_file:
      - ../.env.common
      - ../.env.web
    depends_on:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:1.25-alpine
    container_name: nginx_gateway
    ports:
      - "${HOST_NGINX_PORT:-8080}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3101:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki

  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - loki

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./promtail/config.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

volumes:
  postgres_data:
  grafana_data:
  loki_data:
